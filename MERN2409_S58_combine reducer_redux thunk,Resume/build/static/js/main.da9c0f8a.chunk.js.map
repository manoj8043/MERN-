{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","inputRef","useRef","dispatch","useDispatch","storeObj","useSelector","console","log","React","createElement","ref","type","onClick","data","current","value","BattersReducer","Batter","join","BowlersReducer","Bowler","AllrounderReducer","Allrounder","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialStore","store","createStore","combineReducers","latestStore","arguments","length","undefined","dispatchedObj","concat","applyMiddleware","thunk","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"mMA0DeA,MArDf,WACE,IAAIC,EAAWC,mBACXC,EAAWC,cACXC,EAAWC,YAAaD,IAC1BE,QAAQC,IAAIH,GACLA,IAQT,OACEI,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,SAAOC,IAAKV,EAAUW,KAAK,SAC3BH,IAAAC,cAAA,UACEG,QAASA,KACPV,EAAS,CAAES,KAAM,YAAaE,KAAMb,EAASc,QAAQC,UAExD,cAGDP,IAAAC,cAAA,UACEG,QAASA,KACPV,EAAS,CAAES,KAAM,YAAaE,KAAMb,EAASc,QAAQC,UAExD,cAGDP,IAAAC,cAAA,UACEG,QAASA,KACPV,EAAS,CAAES,KAAM,gBAAiBE,KAAMb,EAASc,QAAQC,UAE5D,kBAGDP,IAAAC,cAAA,UACEG,QAASA,KACPV,EAhCC,KACLA,EAAS,CAAES,KAAM,YAAaE,KAAMb,EAASc,QAAQC,YAiCpD,yBAIDP,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,WAASL,EAASY,eAAeC,OAAOC,QAC5CV,IAAAC,cAAA,UAAI,WAASL,EAASe,eAAeC,OAAOF,QAC5CV,IAAAC,cAAA,UAAI,eAAaL,EAASiB,kBAAkBC,WAAWJ,UC1C9CK,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,oBCCd,IAAIY,EAAe,CACjBnB,OAAQ,GACRG,OAAQ,GACRE,WAAY,IAgCVe,EAAQC,YACVC,YAAgB,CAAEvB,eA9BC,WAA+C,IAA9CwB,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGL,EAAcQ,EAAaH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,MAA2B,cAAvBC,EAAcjC,KACT,IACF6B,EACHvB,OAAQuB,EAAYvB,OAAO4B,OAAOD,EAAc/B,OAG7C2B,GAuB2BrB,eApBf,WAA+C,IAA9CqB,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGL,EAAcQ,EAAaH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,MAA2B,cAAvBC,EAAcjC,KACT,IACF6B,EACHpB,OAAQoB,EAAYpB,OAAOyB,OAAOD,EAAc/B,OAG7C2B,GAa2CnB,kBAV5B,WAA+C,IAA9CmB,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGL,EAAcQ,EAAaH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,MAA2B,kBAAvBC,EAAcjC,KACT,IACF6B,EACHlB,WAAYkB,EAAYlB,WAAWuB,OAAOD,EAAc/B,OAGrD2B,KAIPM,YAAgBC,MAGLC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH5C,IAAAC,cAAC4C,IAAQ,CAAChB,MAAOA,GACf7B,IAAAC,cAACV,EAAG,QAORwB","file":"static/js/main.da9c0f8a.chunk.js","sourcesContent":["import \"./App.css\";\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  let inputRef = useRef();\n  let dispatch = useDispatch();\n  let storeObj = useSelector((storeObj) => {\n    console.log(storeObj);\n    return storeObj;\n  });\n  let addBatter = () => {\n    return () => {\n      dispatch({ type: \"AddBatter\", data: inputRef.current.value });\n    };\n  };\n\n  return (\n    <div>\n      <h1>Redux 2</h1>\n      <input ref={inputRef} type=\"text\" />\n      <button\n        onClick={() => {\n          dispatch({ type: \"AddBatter\", data: inputRef.current.value });\n        }}\n      >\n        Add Batter\n      </button>\n      <button\n        onClick={() => {\n          dispatch({ type: \"AddBowler\", data: inputRef.current.value });\n        }}\n      >\n        Add Bowler\n      </button>\n      <button\n        onClick={() => {\n          dispatch({ type: \"AddAllrounder\", data: inputRef.current.value });\n        }}\n      >\n        Add Allrounder\n      </button>\n      <button\n        onClick={() => {\n          dispatch(addBatter());\n        }}\n      >\n        Add Batter thru trunk\n      </button>\n\n      <hr></hr>\n      <h2>Batters:{storeObj.BattersReducer.Batter.join()}</h2>\n      <h2>Bowlers:{storeObj.BowlersReducer.Bowler.join()}</h2>\n      <h2>Allrounders:{storeObj.AllrounderReducer.Allrounder.join()}</h2>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { thunk } from \"redux-thunk\";\nlet initialStore = {\n  Batter: [],\n  Bowler: [],\n  Allrounder: [],\n};\n\nlet BattersReducer = (latestStore = initialStore, dispatchedObj) => {\n  if (dispatchedObj.type === \"AddBatter\") {\n    return {\n      ...latestStore,\n      Batter: latestStore.Batter.concat(dispatchedObj.data),\n    };\n  }\n  return latestStore;\n};\n\nlet BowlersReducer = (latestStore = initialStore, dispatchedObj) => {\n  if (dispatchedObj.type === \"AddBowler\") {\n    return {\n      ...latestStore,\n      Bowler: latestStore.Bowler.concat(dispatchedObj.data),\n    };\n  }\n  return latestStore;\n};\n\nlet AllrounderReducer = (latestStore = initialStore, dispatchedObj) => {\n  if (dispatchedObj.type === \"AddAllrounder\") {\n    return {\n      ...latestStore,\n      Allrounder: latestStore.Allrounder.concat(dispatchedObj.data),\n    };\n  }\n  return latestStore;\n};\nlet store = createStore(\n  combineReducers({ BattersReducer, BowlersReducer, AllrounderReducer }),\n  applyMiddleware(thunk)\n);\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}