{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","dispatch","useDispatch","storeobj","useSelector","store","NameInputRef","useRef","React","createElement","type","ref","onClick","data","current","value","Batter","join","length","Bowler","Allrounder","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","initialStore","createStore","latestStore","arguments","undefined","dispatchedObj","console","log","concat","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"mMA4EeA,MAxEf,WACE,IAAIC,EAAWC,cACXC,EAAWC,YAAaC,GACnBA,GAELC,EAAeC,mBACnB,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBAEND,IAAAC,cAAA,WACED,IAAAC,cAAA,YACED,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SAAOC,KAAK,OAAOC,IAAKL,IACxBE,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEC,KAAK,SACLE,QAASA,KACPX,EAAS,CAAES,KAAM,YAAaG,KAAMP,EAAaQ,QAAQC,UAE5D,UAGDP,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEC,KAAK,SACLE,QAASA,IACPX,EAAS,CACPS,KAAM,YACNG,KAAMP,EAAaQ,QAAQC,SAGhC,UAGDP,IAAAC,cAAA,WACAD,IAAAC,cAAA,UACEC,KAAK,SACLE,QAASA,KACPX,EAAS,CACPS,KAAM,gBACNG,KAAMP,EAAaQ,QAAQC,UAGhC,gBAKLP,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,YAAUN,EAASa,OAAOC,QAC9BT,IAAAC,cAAA,SAAG,kBAAgBN,EAASa,OAAOE,QACnCV,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,YAAUN,EAASgB,OAAOF,QAC9BT,IAAAC,cAAA,SAAG,kBAAgBN,EAASgB,OAAOD,QACnCV,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,gBAAcN,EAASiB,WAAWH,QACtCT,IAAAC,cAAA,SAAG,sBAAoBN,EAASiB,WAAWF,QAC3CV,IAAAC,cAAA,UAAI,iBAEDN,EAASa,OAAOE,OACff,EAASgB,OAAOD,OAChBf,EAASiB,WAAWF,SAG1BV,IAAAC,cAAA,aC3DSY,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,aCCd,IAAIY,EAAe,CACjBlB,OAAQ,GACRG,OAAQ,GACRC,WAAY,IAwBVf,EAAQ8B,YAtBE,WAA+C,IAA9CC,EAAWC,UAAAnB,OAAA,QAAAoB,IAAAD,UAAA,GAAAA,UAAA,GAAGH,EAAcK,EAAaF,UAAAnB,OAAA,EAAAmB,UAAA,QAAAC,EAItD,OAHAE,QAAQC,IAAI,kBACZD,QAAQC,IAAIF,GAEe,cAAvBA,EAAc7B,KACT,IACF0B,EACHpB,OAAQoB,EAAYpB,OAAO0B,OAAOH,EAAc1B,OAElB,cAAvB0B,EAAc7B,KAChB,IACF0B,EACHjB,OAAQiB,EAAYjB,OAAOuB,OAAOH,EAAc1B,OAElB,kBAAvB0B,EAAc7B,KAChB,IACF0B,EACHhB,WAAYgB,EAAYhB,WAAWsB,OAAOH,EAAc1B,OAGrDuB,IAIIO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHvC,IAAAC,cAACuC,IAAQ,CAAC3C,MAAOA,GACfG,IAAAC,cAACT,EAAG,QAORqB","file":"static/js/main.d9b1de5e.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction App() {\n  let dispatch = useDispatch();\n  let storeobj = useSelector((store) => {\n    return store;\n  });\n  let NameInputRef = useRef();\n  return (\n    <div>\n      <div>\n        <h1>Cricket Team Entry</h1>\n      </div>\n      <div>\n        <form>\n          <label>Name</label>\n          <input type=\"Text\" ref={NameInputRef}></input>\n          <br></br>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch({ type: \"addBatter\", data: NameInputRef.current.value });\n            }}\n          >\n            Batter\n          </button>\n          <br></br>\n          <button\n            type=\"button\"\n            onClick={() =>\n              dispatch({\n                type: \"addBowler\",\n                data: NameInputRef.current.value,\n              })\n            }\n          >\n            Bowler\n          </button>\n          <br></br>\n          <button\n            type=\"button\"\n            onClick={() => {\n              dispatch({\n                type: \"addAllrounder\",\n                data: NameInputRef.current.value,\n              });\n            }}\n          >\n            Allrounder\n          </button>\n        </form>\n      </div>\n      <hr></hr>\n      <div>\n        <h4>Batters :{storeobj.Batter.join()}</h4>\n        <p>Total Batters= {storeobj.Batter.length}</p>\n        <hr></hr>\n        <h4>Bowlers :{storeobj.Bowler.join()}</h4>\n        <p>Total Bowlers= {storeobj.Bowler.length}</p>\n        <hr></hr>\n        <h4>Allrounders :{storeobj.Allrounder.join()}</h4>\n        <p>Total Allrounders= {storeobj.Allrounder.length}</p>\n        <h3>\n          Total Players=\n          {storeobj.Batter.length +\n            storeobj.Bowler.length +\n            storeobj.Allrounder.length}\n        </h3>\n      </div>\n      <h3></h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nlet initialStore = {\n  Batter: [],\n  Bowler: [],\n  Allrounder: [],\n};\nlet reducer = (latestStore = initialStore, dispatchedObj) => {\n  console.log(\"inside reducer\");\n  console.log(dispatchedObj);\n\n  if (dispatchedObj.type === \"addBatter\") {\n    return {\n      ...latestStore,\n      Batter: latestStore.Batter.concat(dispatchedObj.data),\n    };\n  } else if (dispatchedObj.type === \"addBowler\") {\n    return {\n      ...latestStore,\n      Bowler: latestStore.Bowler.concat(dispatchedObj.data),\n    };\n  } else if (dispatchedObj.type === \"addAllrounder\") {\n    return {\n      ...latestStore,\n      Allrounder: latestStore.Allrounder.concat(dispatchedObj.data),\n    };\n  }\n  return latestStore;\n};\nlet store = createStore(reducer);\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}